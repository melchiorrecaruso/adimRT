implementation

uses Math;

// Check routines

procedure CheckEqual(ALeft, ARight: longint); inline;
begin
  if ALeft <> ARight then
    raise Exception.Create('Fatal error: ''='' operator has detected wrong units of measurements.');
end;

procedure CheckNotEqual(ALeft, ARight: longint); inline;
begin
  if ALeft <> ARight then
    raise Exception.Create('Fatal error: ''<>'' operator has detected wrong units of measurements.');
end;

function CheckSum(ALeft, ARight: longint): longint; inline;
begin
  result := ALeft;
  if ALeft <> ARight then
    raise Exception.Create('Fatal error: ''+'' operator has detected wrong units of measurements.');
end;

function CheckSub(ALeft, ARight: longint): longint; inline;
begin
  result := ALeft;
  if ALeft <> ARight then
    raise Exception.Create('Fatal error: ''-'' operator has detected wrong units of measurements.');
end;

function CheckMul(ALeft, ARight: longint): longint; inline;
begin
  result := ALeft + ARight;
end;

function CheckDiv(ALeft, ARight: longint): longint; inline;
begin
  result := ALeft - ARight;
end;              
